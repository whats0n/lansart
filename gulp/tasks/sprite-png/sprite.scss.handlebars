{
  // Default options
  'functions': true,
  'variableNameTransforms': ['dasherize']
}

{{#block "sprites"}}
{{#each sprites}}
${{strings.name}}: (
  {{strings.bare_name}}: '{{name}}',
  {{strings.bare_x}}: {{px.x}},
  {{strings.bare_y}}: {{px.y}},
  {{strings.bare_offset_x}}: {{px.offset_x}},
  {{strings.bare_offset_y}}: {{px.offset_y}},
  {{strings.bare_width}}: {{px.width}},
  {{strings.bare_height}}: {{px.height}},
  {{strings.bare_total_width}}: {{px.total_width}},
  {{strings.bare_total_height}}: {{px.total_height}},
  {{strings.bare_image}}: '{{{escaped_image}}}'
);
{{/each}}
{{#if retina_sprites}}
{{#each retina_sprites}}
${{strings.name}}: (
  {{strings.bare_name}}: '{{name}}',
  {{strings.bare_x}}: {{px.x}},
  {{strings.bare_y}}: {{px.y}},
  {{strings.bare_offset_x}}: {{px.offset_x}},
  {{strings.bare_offset_y}}: {{px.offset_y}},
  {{strings.bare_width}}: {{px.width}},
  {{strings.bare_height}}: {{px.height}},
  {{strings.bare_total_width}}: {{px.total_width}},
  {{strings.bare_total_height}}: {{px.total_height}},
  {{strings.bare_image}}: '{{{escaped_image}}}'
);
{{/each}}
{{/if}}
{{/block}}
{{#block "spritesheet"}}
${{spritesheet_info.strings.name}}: (
  {{spritesheet_info.strings.bare_width}}: {{spritesheet.px.width}},
  {{spritesheet_info.strings.bare_height}}: {{spritesheet.px.height}},
  {{spritesheet_info.strings.bare_image}}: '{{{spritesheet.escaped_image}}}',
  {{spritesheet_info.strings.bare_sprites}}: ({{#each sprites}}${{strings.name}}, {{/each}})
);
{{#if retina_sprites}}
${{retina_spritesheet_info.strings.name}}: (
  {{retina_spritesheet_info.strings.bare_width}}: {{retina_spritesheet.px.width}},
  {{retina_spritesheet_info.strings.bare_height}}: {{retina_spritesheet.px.height}},
  {{retina_spritesheet_info.strings.bare_image}}: '{{{retina_spritesheet.escaped_image}}}',
  {{retina_spritesheet_info.strings.bare_sprites}}: ({{#each retina_sprites}}${{strings.name}}, {{/each}})
);
{{#each retina_groups}}
${{strings.name_group}}: (
  {{strings.bare_name}}: '{{name}}',
  {{strings.bare_normal}}: ${{normal.strings.name}},
  {{strings.bare_retina}}: ${{retina.strings.name}}
);
{{/each}}
${{retina_groups_info.strings.name}}: ({{#each retina_groups}}${{strings.name_group}}, {{/each}});
{{/if}}
{{/block}}

{{#block "sprite-functions-comment"}}
{{#if options.functions}}

{{/if}}
{{/block}}
{{#block "sprite-functions"}}
{{#if options.functions}}
@mixin sprite-width($sprite) {
  width: map-get($sprite, '{{strings.bare_width}}');
}

@mixin sprite-height($sprite) {
  height: map-get($sprite, '{{strings.bare_height}}');
}

@mixin sprite-position($sprite) {
  background-position: map-get($sprite, '{{strings.bare_offset_x}}') map-get($sprite, '{{strings.bare_offset_y}}');
}

@mixin sprite-image($sprite) {
  background-image: url(map-get($sprite, '{{strings.bare_image}}'));
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

@mixin sprites {
  $sprites: map-get($spritesheet, '{{spritesheet_info.strings.bare_sprites}}');
  @each $sprite in $sprites {
    $sprite-name: map-get($sprite, '{{strings.bare_name}}');
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}

// The `retina-sprite` mixin sets up rules and a media query for a sprite/retina sprite.
//  It should be used with a "retina group" variable.

// $icon-home-group: (
//   name: 'icon-home',
//   normal: $icon-home,
//   retina: $icon-home-2x
// );

// .icon-home {
//   @include retina-sprite($icon-home-group);
// }

@mixin sprite-background-size($sprite) {
  background-size: map-get($sprite, '{{strings.bare_total_width}}') map-get($sprite, '{{strings.bare_total_height}}');
}

@mixin retina-sprite($retina-group) {
  $normal-sprite: map-get($retina-group, '{{strings.bare_normal}}');
  $retina-sprite: map-get($retina-group, '{{strings.bare_retina}}');
  @include sprite($normal-sprite);

  @media (-webkit-min-device-pixel-ratio: 2),
         (min-resolution: 192dpi) {
    @include sprite-image($retina-sprite);
    @include sprite-background-size($normal-sprite);
  }
}

@mixin retina-sprites {
  @each $retina-group in $retina-groups {
    $sprite-name: map-get($retina-group, '{{strings.bare_name}}');
    .#{$sprite-name} {
      @include retina-sprite($retina-group);
    }
  }
}
{{/if}}
{{/block}}
